(*
Mouse
=====
Methods to interact with the mouse.
*)

{$DEFINE WL_MOUSE_INCLUDED}
{$IFNDEF WL_UTILS}
  {$I WaspLib/utils.simba}
{$ENDIF}

(*
Mouse.Move
~~~~~~~~~~
.. pascal:: procedure TMouse.Move(tpa: TPointArray; forcedMove: Boolean = False); overload;

Moves the mouse to a random point in a TPoint Array.

- **forcedMove** determines if the mouse should be moved if already in a point that is part of the tpa. By default this is **False**.

*)
procedure TMouse.Move(tpa: TPointArray; forcedMove: Boolean = False; center: Boolean = False); overload;
var
  p: TPoint;
begin
  if tpa = [] then
    Exit;

  if not forcedMove and tpa.Contains(Self.Position()) then
    Exit;

  if center then
    p := tpa.Mean()
  else
    p := tpa.RandomValue();

  Self.Move(p);
end;

procedure TASyncMouse.Move(tpa: TPointArray; forcedMove: Boolean = False; center: Boolean = False; Accuracy: Double = 1); overload;
var
  p: TPoint;
begin
  if not forcedMove and tpa.Contains(Self.Position()) then
    Exit;

  if tpa = [] then
    Exit;

  if center then
    p := tpa.Mean()
  else
    p := tpa.RandomValue();

  Self.Move(p, Accuracy);
end;


procedure TMouse.Scroll(amount: Int32); overload;
begin
  Self.Scroll(Floor(Sqrt(Power(amount,2))), amount < 0);
end;
