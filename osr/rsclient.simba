(*
RSClient
========
Extensions to TRSClient.

One thing to keep in mind is that WaspLib enforces the use of Remote Input by default.

To disable it you have to use either of this snippets in your scripts:

.. pascal::
  {$DEFINE SRL_DISABLE_REMOTEINPUT}
  //or
  begin
    WLSettings.RemoteInput.Enabled := False;
  end;
*)
{$DEFINE WL_RSCLIENT_INCLUDED}
{$IFNDEF WL_OSR}
  {$I WaspLib/osr.simba}
{$ENDIF}

procedure TRSClient.Setup(); override;
begin
  Self.Name := 'RSClient';

  {$IFNDEF SRL_DISABLE_REMOTEINPUT}
    {$IFNDEF SCRIPT_GUI}
      Self.RemoteInput.Setup();
    {$ENDIF}
  {$ENDIF}

  Self.Mode := Self.DetectClientMode();
  if Self.Mode = ERSClientMode.UNKNOWN then
    Self.Mode := ERSClientMode.FIXED; // Fixed as default so we can login if needed

  Self.ClientModeChanged();
end;

function TRSOptions.HideRoofs(): Boolean;
begin
  //overriden later in options file.
  Result := True;
end;

procedure TRSClient.CheckClientSettings();
begin
  if not WL.GameSettings.HighestPitch then
  begin
    WL.GameSettings.HighestPitch := True;
    MainScreen.SetHighestPitch();
  end;

  if not WL.GameSettings.MaxBrightness then
  begin
    WL.GameSettings.MaxBrightness := Options.SetMaxBrightness();

    if (MM2MS.ZoomLevel = -1) and Options.IsOpen() and (Options.GetCurrentTab() = ERSOptionsTab.DISPLAY) then
      MM2MS.ZoomLevel := Options.GetZoomLevel();
  end;

  if not WL.GameSettings.RoofsHidden then
    WL.GameSettings.RoofsHidden := Options.HideRoofs();

  if WL.XP.Previous = 0 then
    XPBar.Read();
end;

function TRSClient.IsLoggedIn(): Boolean; override;
begin
  Result := inherited;

  if Result then
    Self.CheckClientSettings();
end;

procedure TRSClient.UpdateState();
begin
  Self.DetectClientMode(True);
  Self.ClientModeChanged();
end;

function TWaspLib.CountScriptThreads(): Int32;
var
  processes, procArr: TOSWindowArray;
  pids, mainPIDs: TIntegerArray;
  i, pidCount, procCount: Int32;
begin
  processes := GetWindows();
  for i := 0 to High(processes) do
  begin
    if 'simba' in LowerCase(processes[i].GetTitle()) then
    begin
      pids += processes[i].GetPID();
      procArr += processes[i];
    end;
  end;

  pids.Sort();
  pids.ClearDuplicates();
  pidCount := Length(pids);

  pids := [];
  for i := 0 to High(procArr) do
    if procArr[i] = procArr[i].GetRootWindow() then
      pids += procArr[i].GetPID();

  mainPIDs := pids;
  mainPIDs.ClearDuplicates();
  procCount := Length(pids) - Length(mainPIDs);
  Result := pidCount - procCount * 2;
end;

procedure TWaspLib.CheckScriptThreads();
begin
  if Self.CountScriptThreads() >= 7 then
    TerminateScript('You seem to be running more than 7 simba scripts.' +
    LINEENDING + LINEENDING + 'WaspLib is not meant for gold farming. If this is not the case contact Torwent in discord.');
end;

begin
  WL.CheckScriptThreads();
end;
