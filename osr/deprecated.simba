{$DEFINE WL_DEPRECATED_INCLUDED}
{$IFNDEF WL_OSR}
  {$I WaspLib/osr.simba}
{$ENDIF}

//deprecated WaspLib methods. AVOID USING THEM!
  
function TPointArray.LimitTo(box: TBox): TPointArray; deprecated 'Use TPointArray.FilterBox() instead';
begin
  Result := Self.FilterBox(box);
end;

type
  TStatsPayload = type TSRLBaseRecord;

{$H-}
procedure TStatsPayload.Setup(id: String; user: String = ''); deprecated 'This is not needed anymore';
begin

end;

procedure TStatsPayload.Update(xp, gp, time: Int32); deprecated 'Use APICLient.UpdatePayload() instead.';
begin
  APIClient.UpdatePayload(xp, gp, time);
end;

procedure TStatsPayload.SetUsername(user: String = ''); deprecated 'Use APICLient.SetUsername() instead.';
begin
  APIClient.SetUsername(user);
end;

var
  StatsPayload: TStatsPayload;
{$H+}


function TBaseBankScript.Withdraw(item: TRSBankWithdrawItem): Boolean; overload; deprecated 'Use the TRSBankItem version instead!';
var
  tmp: TRSBankItem;
begin
  tmp := TRSBankItem.Setup(item.item, item.Quantity, item.Noted);
  tmp.Tab := Self.BankTab;

  Result := Self.Withdraw(tmp);

  Self.BankTab := tmp.Tab;
end;


function TRSWalker.GetMMPoly(tpa: TPointArray): TPointArray; deprecated 'Use TRSWalker.WorldToMM() instead.';
begin
  Result := Self.WorldToMM(tpa);
end;


