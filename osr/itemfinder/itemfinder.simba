(*
ItemFinder
==========
Methods to extend SRL's ItemFinder functionality.

This file is responsible for loading fixed sprites for known broken items with
the default SRL (e.g.: Rune pouch).

Some handy item wrappers were added for all cakes, pies and pizzas
(e.g.: Cake(3) for "Cake", Cake(2) for "2/3 cake" and Cake(1) for "Slice of cake").
*)

{$DEFINE WL_ITEMFINDER_INCLUDED}
{$IFNDEF WL_OSR}
  {$I WaspLib/osr.simba}
{$ENDIF}

(*
const WL_ITEM_FINDER_IMAGES_PATH
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Global const for WaspLib's ItemFinder override images:
`Simba\\Includes\\WaspLib\\osr\\itemfinder\\images\\`
*)
const
  WL_ITEM_FINDER_IMAGES_PATH = {$macro CURRENT_DIRECTORY} + DirectorySeparator + 'images' + DirectorySeparator;

function TRSItem.IsNull(): Boolean;
begin
  Result := ToString(Self) = '';
end;

type
  TOverridenItem = record
    ItemID: Int32;
    Files: TStringArray;
  end;

  TOverridenItemArray = array of TOverridenItem;

procedure TOverridenItemArray.Setup(Item: TRSItem; FileName: String; FileCount: Int32 = 0);
var
  OverridenItem: TOverridenItem;
  i: Int32;
  Str: String;
begin
  Str := VarToStr(Item);

  if VarToStr(Str).IsDigit() then
    OverridenItem.ItemID := StrToInt(Str)
  else
  begin
    OverridenItem.ItemID := StrToInt(ItemFinder.ItemNames.GetValues(Str));
    if (OverridenItem.ItemID = 0) then
      ItemFinder.Fatal('Unknown item: ' + Str);
  end;

  for i := 0 to FileCount do
    OverridenItem.Files += FileName + ToStr(i) + '.png';

  Self += OverridenItem;
end;

function TOverridenItemArray.Find(ItemID: Int32): Int32;
var
  i: Int32;
begin
  for i := 0 to High(Self) do
    if Self[i].ItemId = ItemId then
      Exit(i);
  Result := -1;
end;


var
  OverridenItems: TOverridenItemArray;

(*
ItemFinder.GetItemImages
~~~~~~~~~~~~~~~~~~~~~~~~
.. pascal:: function TRSItemFinder.GetItemImages(Item: String): array of TMufasaBitmap; override;

Overrides the default ItemFinder.GetItemImages so it also loads the fixed
sprites stored in **WL_ITEM_FINDER_IMAGES_PATH**.
*)
function TRSItemFinder.GetItemImages(Item: String): array of TMufasaBitmap; override;
type
  TMufasaBitmap = TMufasaBitmap;

  function TMufasaBitmap.Equals(Other: TMufasaBitmap): Boolean; override;
  begin
    Result := (Self.GetWidth()  = Other.GetWidth()) and
              (Self.GetHeight() = Other.GetHeight()) and
              (CompareMem(Self.GetData()^, Other.GetData()^, Self.GetWidth() * Self.GetHeight() * SizeOf(TRGB32)));
  end;

var
  FileName, Str: String;
  Image: TMufasaBitmap;
  ItemID: Int32;
  I, J: Int32;
begin
  for I := 0 to High(Self.ItemImages) do
    if (Self.ItemImages[I].Name = Item) then
    begin
      Result := Self.ItemImages[I].Images;

      Exit;
    end;

  for ItemID in GetItemIDs(Item) do
  begin
    FileName := ExpandFileName(ITEM_FINDER_IMAGES_PATH + ToStr(ItemID) + '.png');

    if FileExists(FileName) or UnZipOneFile(ITEM_FINDER_IMAGES_ZIP, ExtractFileName(FileName), ITEM_FINDER_IMAGES_PATH) then
    begin
      Image.Init(Client.GetMBitmaps());
      Image.LoadFromFile(FileName);
      Image.SetName(Item);
      Image.ReplaceColor(RS_ITEM_SHADOW, 0);

      for J := 0 to High(Result) do
        if Image.Equals(Result[J]) then
        begin
          Image.Free();
          Image := nil;

          Break;
        end;

      if (Image <> nil) then
        Result += Image;
    end
    else
      Self.Fatal('Unknown item: ' + ToStr(ItemID));

    I := OverridenItems.Find(ItemId);
    if I > -1 then
    begin
      for Str in OverridenItems[I].Files do
      begin
        FileName := ExpandFileName(WL_ITEM_FINDER_IMAGES_PATH + Str);
        if FileExists(FileName) then
        begin
          Image.Init(Client.GetMBitmaps());
          Image.LoadFromFile(FileName);
          Image.SetName(Item);
          Image.ReplaceColor(RS_ITEM_SHADOW, 0);

          for J := 0 to High(Result) do
            if Image.Equals(Result[J]) then
            begin
              Image.Free();
              Image := nil;

              Break;
            end;

          if (Image <> nil) then
            Result += Image;
        end;
      end;
    end;
  end;

  if (Length(Result) = 0) then
    Self.Fatal('Unknown item: ' + Item);

  Self.ItemImages += [Item, Result];
end;

(*
ItemFinder Wrappers
~~~~~~~~~~~~~~~~~~~
The following wrappers are set by WaspLib for more consistent usage of itemfinder.

Example
-------

  Name: cake(3) => ItemID: 1891
  Name: cake(2) => ItemID: 1893
  Name: cake(1) => ItemID: 1895
  Name: meat pie(2) => ItemID: 2327
  Name: meat pie(1) => ItemID: 2331
  Name: plain pizza(2) => ItemID: 2289
  Name: plain pizza(1) => ItemID: 2291
  Name: apple pie(2) => ItemID: 2323
  Name: apple pie(1) => ItemID: 2335
  Name: chocolate cake(3) => ItemID: 1897
  Name: chocolate cake(2) => ItemID: 1899
  Name: chocolate cake(1) => ItemID: 1901
  Name: meat pizza(2) => ItemID: 2293
  Name: meat pizza(1) => ItemID: 2295
  Name: anchovy pizza(2) => ItemID: 2297
  Name: anchovy pizza(1) => ItemID: 2299
  Name: pineapple pizza(2) => ItemID: 2301
  Name: pineapple pizza(1) => ItemID: 2303
  Name: pineapple pizza(2) => ItemID: 2301
  Name: pineapple pizza(1) => ItemID: 2303
  Name: redberry pie(2) => ItemID: 2325
  Name: redberry pie(1) => ItemID: 2333
  Name: garden pie(2) => ItemID: 7178
  Name: garden pie(1) => ItemID: 7180
  Name: fish pie(2) => ItemID: 7188
  Name: fish pie(1) => ItemID: 7190
  Name: botanical pie(2) => ItemID: 19662
  Name: botanical pie(1) => ItemID: 19659
  Name: mushroom pie(2) => ItemID: 21687
  Name: mushroom pie(1) => ItemID: 21690
  Name: admiral pie(2) => ItemID: 7198
  Name: admiral pie(1) => ItemID: 7200
  Name: dragonfruit pie(2) => ItemID: 22795
  Name: dragonfruit pie(1) => ItemID: 22792
  Name: wild pie(2) => ItemID: 7208
  Name: wild pie(1) => ItemID: 7210
  Name: summer pie(2) => ItemID: 7218
  Name: summer pie(1) => ItemID: 7220
*)
begin
  OverridenItems.Setup('Pay-dirt', 'paydirt');
  OverridenItems.Setup('Rune pouch', 'runepouch');
  OverridenItems.Setup('Divine rune pouch', 'divinerunepouch');
  OverridenItems.Setup('Golovanova seed', 'golovanovaseed');
  OverridenItems.Setup('Bologano seed', 'bologanoseed');
  OverridenItems.Setup('Logavano seed', 'logavanoseed');
  OverridenItems.Setup('Spirit angler top', 'spiritanglertop');
  OverridenItems.Setup('Spirit angler waders', 'spiritanglerwaders');
  OverridenItems.Setup('Ring of returning(5)', 'ror');
  OverridenItems.Setup('Ring of returning(4)', 'ror');
  OverridenItems.Setup('Ring of returning(3)', 'ror');
  OverridenItems.Setup('Ring of returning(2)', 'ror');
  OverridenItems.Setup('Ring of returning(1)', 'ror');

  ItemFinder.AddItemName('cake(3)', '1891');
  ItemFinder.AddItemName('cake(2)', '1893');
  ItemFinder.AddItemName('cake(1)', '1895');

  ItemFinder.AddItemName('meat pie(2)', '2327');
  ItemFinder.AddItemName('meat pie(1)', '2331');

  ItemFinder.AddItemName('plain pizza(2)', '2289');
  ItemFinder.AddItemName('plain pizza(1)', '2291');

  ItemFinder.AddItemName('apple pie(2)', '2323');
  ItemFinder.AddItemName('apple pie(1)', '2335');

  ItemFinder.AddItemName('chocolate cake(3)', '1897');
  ItemFinder.AddItemName('chocolate cake(2)', '1899');
  ItemFinder.AddItemName('chocolate cake(1)', '1901');

  ItemFinder.AddItemName('meat pizza(2)', '2293');
  ItemFinder.AddItemName('meat pizza(1)', '2295');

  ItemFinder.AddItemName('anchovy pizza(2)', '2297');
  ItemFinder.AddItemName('anchovy pizza(1)', '2299');

  ItemFinder.AddItemName('pineapple pizza(2)', '2301');
  ItemFinder.AddItemName('pineapple pizza(1)', '2303');

  ItemFinder.AddItemName('pineapple pizza(2)', '2301');
  ItemFinder.AddItemName('pineapple pizza(1)', '2303');

  ItemFinder.AddItemName('redberry pie(2)', '2325');
  ItemFinder.AddItemName('redberry pie(1)', '2333');

  ItemFinder.AddItemName('garden pie(2)', '7178');
  ItemFinder.AddItemName('garden pie(1)', '7180');

  ItemFinder.AddItemName('fish pie(2)', '7188');
  ItemFinder.AddItemName('fish pie(1)', '7190');

  ItemFinder.AddItemName('botanical pie(2)', '19662');
  ItemFinder.AddItemName('botanical pie(1)', '19659');

  ItemFinder.AddItemName('mushroom pie(2)', '21687');
  ItemFinder.AddItemName('mushroom pie(1)', '21690');

  ItemFinder.AddItemName('admiral pie(2)', '7198');
  ItemFinder.AddItemName('admiral pie(1)', '7200');

  ItemFinder.AddItemName('dragonfruit pie(2)', '22795');
  ItemFinder.AddItemName('dragonfruit pie(1)', '22792');

  ItemFinder.AddItemName('wild pie(2)', '7208');
  ItemFinder.AddItemName('wild pie(1)', '7210');

  ItemFinder.AddItemName('summer pie(2)', '7218');
  ItemFinder.AddItemName('summer pie(1)', '7220');
end;
